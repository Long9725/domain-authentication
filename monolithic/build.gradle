
plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.1'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'jacoco'
}

def customJacocoReportDir = 'jacoco/reports'
group = 'com.instream'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

jacoco {
	toolVersion = '0.8.11'
}

jacocoTestReport {
	reports {
		html.required.set(true)
		html.outputLocation.set(layout.buildDirectory.dir("$customJacocoReportDir/html"))

		xml.required.set(true)
		xml.outputLocation.set(layout.buildDirectory.file("$customJacocoReportDir/xml/jacoco.xml"))

		csv.required.set(true)
		csv.outputLocation.set(layout.buildDirectory.file("$customJacocoReportDir/csv/jacoco.csv"))
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.10 // 10% 커버리지
			}
		}
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	// testImplementation 'org.springframework.security:spring-security-test'

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// postgresql
	runtimeOnly 'org.postgresql:postgresql'

	// swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
}

test {
	finalizedBy jacocoTestReport, jacocoTestCoverageVerification
	useJUnitPlatform()
}

//tasks.named('test') {
//	useJUnitPlatform()
//}
